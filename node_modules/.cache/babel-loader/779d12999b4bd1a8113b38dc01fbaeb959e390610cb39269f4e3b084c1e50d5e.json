{"ast":null,"code":"var _jsxFileName = \"/Users/becketchambliss/Desktop/gitSome/rudolfstingel/rudolfstingel/src/context/AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport image1 from '../images/background/background1.png';\nimport image2 from '../images/background/background2.png';\nimport image3 from '../images/background/background3.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const useAppContext = () => {\n  _s();\n  return useContext(AppContext);\n};\n_s(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst images = [image1, image2, image3];\nexport const AppProvider = ({\n  children\n}) => {\n  _s2();\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [selectedExhibition, setSelectedExhibition] = useState(null);\n  const [backgroundImage] = useState(() => {\n    const randomIndex = Math.floor(Math.random() * images.length);\n    return images[randomIndex];\n  });\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      selectedYear,\n      setSelectedYear,\n      selectedExhibition,\n      setSelectedExhibition,\n      backgroundImage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s2(AppProvider, \"rtWdUjjhWLQwv/GVhy8JzirwDug=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","image1","image2","image3","jsxDEV","_jsxDEV","AppContext","useAppContext","_s","images","AppProvider","children","_s2","selectedYear","setSelectedYear","selectedExhibition","setSelectedExhibition","backgroundImage","randomIndex","Math","floor","random","length","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/becketchambliss/Desktop/gitSome/rudolfstingel/rudolfstingel/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport image1 from '../images/background/background1.png';\nimport image2 from '../images/background/background2.png';\nimport image3 from '../images/background/background3.png';\n\nconst AppContext = createContext();\n\nexport const useAppContext = () => useContext(AppContext);\n\nconst images = [image1, image2, image3];\n\nexport const AppProvider = ({ children }) => {\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [selectedExhibition, setSelectedExhibition] = useState(null);\n  const [backgroundImage] = useState(() => {\n    const randomIndex = Math.floor(Math.random() * images.length);\n    return images[randomIndex];\n  });\n\n  return (\n    <AppContext.Provider value={{\n      selectedYear,\n      setSelectedYear,\n      selectedExhibition,\n      setSelectedExhibition,\n      backgroundImage,\n    }}>\n      {children}\n    </AppContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,OAAOC,MAAM,MAAM,sCAAsC;AACzD,OAAOC,MAAM,MAAM,sCAAsC;AACzD,OAAOC,MAAM,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,UAAU,gBAAGR,aAAa,CAAC,CAAC;AAElC,OAAO,MAAMS,aAAa,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMT,UAAU,CAACO,UAAU,CAAC;AAAA;AAACE,EAAA,CAA7CD,aAAa;AAE1B,MAAME,MAAM,GAAG,CAACR,MAAM,EAAEC,MAAM,EAAEC,MAAM,CAAC;AAEvC,OAAO,MAAMO,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACiB,eAAe,CAAC,GAAGjB,QAAQ,CAAC,MAAM;IACvC,MAAMkB,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGZ,MAAM,CAACa,MAAM,CAAC;IAC7D,OAAOb,MAAM,CAACS,WAAW,CAAC;EAC5B,CAAC,CAAC;EAEF,oBACEb,OAAA,CAACC,UAAU,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAC1BX,YAAY;MACZC,eAAe;MACfC,kBAAkB;MAClBC,qBAAqB;MACrBC;IACF,CAAE;IAAAN,QAAA,EACCA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAAChB,GAAA,CAnBWF,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}